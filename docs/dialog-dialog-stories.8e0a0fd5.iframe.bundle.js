(self.webpackChunkunity=self.webpackChunkunity||[]).push([[60],{"./projects/ngx-core-business/components/src/dialog/dialog.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/@angular-devkit/build-angular/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,"",""]),module.exports=___CSS_LOADER_EXPORT___.toString()},"./projects/ngx-core-business/components/src/dialog/dialog.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>dialog_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),fesm2022_button=__webpack_require__("./node_modules/@angular/material/fesm2022/button.mjs"),dialog=__webpack_require__("./node_modules/@angular/material/fesm2022/dialog.mjs");var ButtonType,dialog_componentngResource=__webpack_require__("./projects/ngx-core-business/components/src/dialog/dialog.component.scss?ngResource"),dialog_componentngResource_default=__webpack_require__.n(dialog_componentngResource),platform_browser=__webpack_require__("./node_modules/@angular/platform-browser/fesm2022/platform-browser.mjs");!function(ButtonType){ButtonType.RAISED="raised",ButtonType.STROKED="stroked",ButtonType.NORMAL="normal"}(ButtonType||(ButtonType={}));let DialogComponent=class DialogComponent{constructor(dialogRef,inputData,sanitizer){this.dialogRef=dialogRef,this.inputData=inputData,this.sanitizer=sanitizer,this.title="Confirmar",this.message="",this.safeMessage="",this.actionText="ACEPTAR",this.yesText="SÍ",this.noText="NO",this.actionButtonColor="primary",this.actionButtonType=ButtonType.RAISED,this.cancelText="CANCELAR",this.options=[],this.suggested="none"}ngOnInit(){this.setPropsFromData()}setPropsFromData(){const me=this;Object.assign(me,me.inputData),me.safeMessage=me.sanitizer.bypassSecurityTrustHtml(me.message),me.options.length||me.setDefaultButtons()}setDefaultButtons(){const me=this;if("yes_not"!=me.buttons)return"confirm_cancel"==me.buttons||"cancel_confirm"==me.buttons?(me.options=[{text:me.actionText,buttonColor:me.actionButtonColor?me.actionButtonColor:"primary",buttonType:ButtonType.RAISED,option:!0,suggested:"confirm"==me.suggested},{text:me.cancelText,buttonType:ButtonType.NORMAL,option:!1,suggested:"cancel"==me.suggested}],void("cancel_confirm"==me.buttons&&me.options.reverse())):void("ok"==me.buttons&&(me.options=[{text:me.actionText,buttonColor:me.actionButtonColor?me.actionButtonColor:"primary",buttonType:ButtonType.RAISED,option:!0}]));me.options=me.getYesNotButtons()}getYesNotButtons(){const me=this;return[{text:me.yesText,buttonColor:"primary",buttonType:"yes"==me.suggested?ButtonType.RAISED:ButtonType.STROKED,option:!0},{text:me.noText,buttonColor:"no"==me.suggested?"primary":"warn",buttonType:"no"==me.suggested?ButtonType.RAISED:ButtonType.STROKED,option:!1}]}onOptionClick(option){this.dialogRef.close(option.option)}static{this.ctorParameters=()=>[{type:dialog.CP},{type:void 0,decorators:[{type:core.Inject,args:[dialog.Vh]}]},{type:platform_browser.DomSanitizer}]}};DialogComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-dialog",template:'<h2 mat-dialog-title>{{title}}</h2>\r\n<div mat-dialog-content [innerHTML]="safeMessage" [ngStyle]="{\'max-width\': maxWidth?maxWidth + \'px\':null}"></div>\r\n<mat-dialog-actions align="end" class="text-right">\r\n  <ng-container *ngFor="let option of options">\r\n    <button *ngIf="!option.buttonType" (click)="onOptionClick(option)" mat-button\r\n      [color]="option.buttonColor">{{option.text}}</button>\r\n    <button *ngIf="option.buttonType == \'normal\'" (click)="onOptionClick(option)" mat-button\r\n      [color]="option.buttonColor">{{option.text}}</button>\r\n    <button *ngIf="option.buttonType == \'raised\'" (click)="onOptionClick(option)" mat-raised-button\r\n      [color]="option.buttonColor">{{option.text}}</button>\r\n    <button *ngIf="option.buttonType == \'stroked\'" (click)="onOptionClick(option)" mat-stroked-button\r\n      [color]="option.buttonColor">{{option.text}}</button>\r\n  </ng-container>\r\n</mat-dialog-actions>\r\n',standalone:!1,styles:[dialog_componentngResource_default()]})],DialogComponent);let NgBizDialogModule=class NgBizDialogModule{};NgBizDialogModule=(0,tslib_es6.Cg)([(0,core.NgModule)({declarations:[DialogComponent],imports:[common.CommonModule,fesm2022_button.Hl,dialog.hM],exports:[DialogComponent]})],NgBizDialogModule);const dialog_stories={title:"Components/Dialog",tags:["autodocs"],component:DialogComponent,decorators:[(0,dist.moduleMetadata)({imports:[NgBizDialogModule]})]},Default={},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}}}}]);